module lib.retrieve (retrieve, setLeafName, FluConfig)

import lib.flutypes

-- Import functions for accessing public sequence records
import bio.db
  ( searchEntrez as fetchIds
  , nucleotideAccessionToJson as fetchRecords
  , EntrezSearchConfig
  , EntrezFetchConfig
  )

-- Import generic functions
import base (map, concat, shard, join, keys, onFst, sleep, readMap)
import json (JsonObj)
import types (Filename)


-- Define the configuration record
record FluConfig = FluConfig
  { mindate :: Date
  , maxdate :: Date
  , reffile :: Filename
  , treefile :: Filename
  , query :: Str
  , email :: Str
  }

-- Specify the representation of this record in Python and R
record Py => FluConfig = "dict"
record R => FluConfig = "list"

-- Source python functions for dealing with Entrez records
source Py from "entrez.py"
  ( "parseRecord"
  , "labelRef"
  , "setLeafName"
  )

-- Source C++ alternative for one of these functions
source Cpp from "entrez.hpp" ("setLeafName")

-- Define the general type of each function
parseRecord :: JsonObj -> (JsonObj, Sequence)
labelRef :: Map Accession Clade -> JsonObj -> (JsonObj, Clade)
setLeafName :: (JsonObj, Sequence) -> Str

-- Retrieve sequence data from Entrez and tag reference strains
retrieve :: FluConfig -> [((JsonObj, Clade), Sequence)]
retrieve config =
  (
  -- For each result, takes a map of reference clades and a JsonObj record,
  -- extract the strain accession from the JSON record, and look the accession
  -- up in the reference map (refmap). If a clade is found, then this strain is
  -- a reference and its clade is stored as the second element in a returned
  -- tuple, otherwise an empty string is stored.
    map ( onFst (labelRef refmap))
  -- flattens a list of lists into a list
  . concat
  . map (
        -- parses XML record to (JsonObj, Sequence) pair
          map parseRecord
        -- pauses execution for a number of seconds; this step is needed because
        -- Entrez limits the number of queries a user may make per second
        . sleep 1.0
        -- takes a list of ids and fetches their full XML records from the Entrez database
        . fetchRecords fetchConfig
        )
  -- breaks a list into many sub-lists of 30 or fewer items
  . shard 30
  -- adds the list of reference accessions to the list of queried accessions
  . join (keys refmap)
  -- sends a search query to Entrez and returns a list of record accessions
  . fetchIds searchConfig
  ) config@query
  where
    searchConfig =
      { email = config@email
      , db = "nuccore"
      , mindate = config@mindate
      , maxdate = config@maxdate
      , retmax = 1000
      }
    fetchConfig = { email = config@email }
    refmap = readMap config@reffile
